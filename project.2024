#I investigate pedological conditions and projections for India, I use data from the Harmonized World Soil Database, the SOC data from
#FAO and the projections under BAU and three scenarios of different addictive carbon inputs, climatic data from geodata packages, land use 
#cover data from copernicus. we use a species distribution model SDM to 

install.packages(c("terra","dplyr","raster","geodata","usdm","sdmpredictors","dismo"))

library(terra)
library(tidyterra)
library(sp)
library(raster)
library(dplyr)
library(geodata)
library(usdm)
library(sdmpredictors)
library(dismo)

# Set the wd

setwd("/Users/Cat/Desktop/SPATIALECOLOGY")

# SOC stock scenario in three sustainable soil management, more than business as usual (SSM1, SSM2, SSM3, BAU).
# The data have been collected at country level by a massive cooperative work driven by FAO

#lets begin with the initial map of stocked soc by FAO
tif_file<-"GSOCmap1.5.0 copia.tif"
raster_data<-rast(tif_file)

# We crop with the india extent manually
ext <- c(68.194128, 97.395358, 6.753515,37.084107)
indiasoc19<-crop(raster_data, ext)

#we now have the data of SOC for India of 2019

#harmonized world soil database, which contains information about texture, depth, salinity and water retention
raster_hwsd <- rast("/Users/Cat/Desktop/SPATIALECOLOGY/HWSD_RASTER/hwsd.bil")
hwsd_india_diff<-crop(raster_hwsd, ext)
print(hwsd_india_diff) # I check the extent: 68.19167, 97.39167, 6.75, 37.08333  (xmin, xmax, ymin, ymax)
plot(hwsd_india_diff)

# The extent is not the same as indiasoc19.
# With resample from terra package we want to make match of the extents
hwsd_india <- resample(hwsd_india_diff, indiasoc19, method = "bilinear")
plot(hwsd_india)

# We check the resample went well checkin the extent and the resolution
ext(hwsd_india)
ext(indiasoc19)

# Check resolution
res(hwsd_india)
res(indiasoc19)

# Check number of rows and columns
dim(hwsd_india)
dim(indiasoc19)

# Check Coordinate Reference System (CRS)
crs(hwsd_india)
crs(indiasoc19)

# We also do a visual check 
plot(indiasoc19, col = "lightgray")
plot(hwsd_india, add = TRUE, alpha = 0.5)

# The resampling went well.

#raster of sequestered soc cropped for india
raster_gsoc_seq_bau <- rast("/Users/Cat/Desktop/SPATIALECOLOGY/GSOCseq_T0_Map030.tif")
seq_bau<-crop(raster_gsoc_seq_bau, ext)
print(seq_bau)
plot(seq_bau)

#download and crop the SOC proiection for the BAU scenario
raster_final_soc_bau <- rast("/Users/Cat/Desktop/SPATIALECOLOGY/GSOCseq_finalSOC_BAU_Map030.tif")
bau<-crop(raster_final_soc_bau, ext)
print(bau)
plot(bau)

#download and crop the SOC proiection for the ssm1 scenario, or low carbon inputs (5%) in a sustainable management soil scenario
raster_final_soc_ssm1<-rast("/Users/Cat/Desktop/SPATIALECOLOGY/GSOCseq_finalSOC_SSM1_Map030.tif")
ssm1<-crop(raster_final_soc_ssm1, ext)
print(ssm1)
plot(ssm1)

#download and crop the SOC proiection for the ssm2 scenario, or medium carbon inputs (10%) 
raster_final_soc_ssm2<-rast("/Users/Cat/Desktop/SPATIALECOLOGY/GSOCseq_RSR_SSM2_Map030.tif")
ssm2<-crop(raster_final_soc_ssm2, ext)
print(ssm2)
plot(ssm2)

#download and crop the SOC proiection for the ssm1 scenario, or high carbon inputs (20%) 
raster_final_soc_ssm3<-rast("/Users/Cat/Desktop/SPATIALECOLOGY/GSOCseq_RSR_SSM3_Map030.tif")
ssm3<-crop(raster_final_soc_ssm3, ext)
print(ssm3)
plot(ssm3)

#%%%%% I want to evaluate area at desertification risk, so i evaluate the absolute and relative variation
# in initial and final SOC
delta_bau <- bau - indiasoc19
delta_perc_bau <- ((bau - indiasoc19) / indiasoc19) * 100
delta_ssm1 <- ssm1 - indiasoc19
delta_perc_ssm1 <- ((ssm1 - indiasoc19) / indiasoc19) * 100
delta_ssm2 <- ssm2 - indiasoc19
delta_perc_ssm2 <- ((ssm2 - indiasoc19) / indiasoc19) * 100
delta_ssm3 <- ssm3 - indiasoc19
delta_perc_ssm3 <- ((ssm3 - indiasoc19) / indiasoc19) * 100

#I plot variation to gain information on the area with the loss of SOC greater than the 10% for the BAU and for ssm1,ssm2 and ssm3
plot(delta_perc_bau, main = "Δ% SOC - Scenario BAU", col = terrain.colors(20))
plot(delta_perc_bau < -10, main = "Aree con perdita >10% - BAU", col = c("white", "red"))

plot(delta_perc_ssm1, main = "Δ% SOC - Scenario ssm1", col = terrain.colors(20))
plot(delta_perc_ssm1 < -10, main = "Aree con perdita >10% - ssm1", col = c("white", "red"))

plot(delta_perc_ssm2, main = "Δ% SOC - Scenario ssm2", col = terrain.colors(20))
plot(delta_perc_ssm2 < -10, main = "Aree con perdita >10% - ssm2", col = c("white", "red"))

plot(delta_perc_ssm3, main = "Δ% SOC - Scenario ssm3", col = terrain.colors(20))
plot(delta_perc_ssm3 < -10, main = "Aree con perdita >10% - ssm3", col = c("white", "red"))

#
